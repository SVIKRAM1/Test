# Kickstart config file generated by RHN Satellite Config Management
# Profile Label : hsc-oho-dev-fmw
# Date Created  : 2013-06-20 10:22:36.0

install
text
network --bootproto dhcp
url --url http://hscuschlux00183.harsco.com/ks/dist/hsc-ks-rhel-x86_64-server-5-2013.03
lang en_US
keyboard us
zerombr
clearpart --all
bootloader --location mbr
timezone --utc Europe/London
auth --enablemd5 --enableshadow
rootpw --iscrypted $1$8FMelyWs$UCqV3.tIBBZS8OjPUO8FM1
selinux --disabled
reboot
firewall --disabled
skipx
key --skip
%include /tmp/hsc_network_include
repo --name=hsc-deploy-rhel-x86_64-server-5-2013.03 --baseurl=http://hscuschlux00183.harsco.com/ks/dist/child/hsc-deploy-rhel-x86_64-server-5-2013.03/hsc-ks-rhel-x86_64-server-5-2013.03
repo --name=hsc-rhn-tools-rhel-x86_64-server-5-2013.03 --baseurl=http://hscuschlux00183.harsco.com/ks/dist/child/hsc-rhn-tools-rhel-x86_64-server-5-2013.03/hsc-ks-rhel-x86_64-server-5-2013.03
%include /tmp/partition-config

%packages 

@ Base
@ british-support
@ Core
@ development-tools
-libibverbs
-libmthca
-libsdp
-udapl
amtu
atk
audit-libs-python
avahi-glib
bzip2-libs
cairo
compat-db
compat-gcc-34
compat-gcc-34-c++
compat-libgcc-296
compat-libstdc++-296
compat-libstdc++-33
compat-libstdc++-33.i386
coolkey
coreutils
curl
eel2
elfutils-libelf-devel.i386
elfutils-libelf-devel.x86_64
elfutils-libelf.i386
elfutils-libelf.x86_64
expat
expat.i386
expect
fontconfig
fontconfig.i386
freetype
freetype.i386
gail
gamin
gcc
gcc-c++
GConf2
gdbm.i386
gdbm.x86_64
ghostscript
gimp
gimp-libs
gimp-print
glibc-devel
glibc-devel.i386
gnome-desktop
gnome-icon-theme
gnome-keyring
gnome-menus
gnome-panel
gnome-terminal
gnupg
gnutls
gstreamer
gstreamer-tools
gtk2
gtk2-engines
hsc-firstboot
iscsi-initiator-utils
kernel
kernel-devel
kernel-headers
libacl
libaio
libaio-devel
libattr
libbonobo
libbonoboui
libcroco
libexif
libgcc
libgcc.i386
libgnome
libgnomecanvas
libgnomeui
libgomp
libgsf
libIDL
libstdc++
libstdc++-devel.i386
libstdc++-devel.x86_64
libstdc++.i386
libtiff
libwmf
libwnck
libXcursor
libXfixes
libxklavier
libxml2
libxml2-python
libXp
libXrandr
libXres
libXScrnSaver
libXtst
libXxf86misc
make
mesa-libGLU
metacity
mutt
nautilus-extensions
net-snmp
net-snmp-utils
nmap
ntp
openmotif
ORBit2
osad
pango
python-libs
quota
rcs
redhat-artwork
rhncfg
rhncfg-actions
rhncfg-client
rhncfg-management
rhn-custom-info
samba
samba-client
samba-common
samba-swat
screen
shared-mime-info
startup-notification
sysstat
system-config-printer
unixODBC
unixODBC-devel
unixODBC-devel.i386
unixODBC-devel.x86_64
unixODBC.i386
unixODBC.x86_64
vim-common
vim-enhanced
vim-X11
vnc-server
xorg-x11-twm
xterm
yum-security
yum-utils
zlib
zlib.i386

%pre

wget "http://hscuschlux00183.harsco.com/cblr/svc/op/trig/mode/pre/profile/hsc-oho-dev-fmw:1:HarscoCorporation" -O /dev/null


%pre
echo "Saving RHN keys..." > /dev/ttyS0
SYSTEM_ID=/etc/sysconfig/rhn/systemid
rhn_keys_found=no

insmod /lib/jbd.o
insmod /lib/ext3.o

if [ -f /lib/ext4.o ]; then
    insmod /lib/ext4.o
fi

mkdir -p /tmp/rhn

drives=$(list-harddrives | awk '{print $1}')
for disk in $drives; do
    DISKS="$DISKS $(fdisk -l /dev/$disk | grep -v "swap\|LVM\|Extended" | awk '/^\/dev/{print $1}')"
done

# Try to find the keys on ordinary partitions
for disk in $DISKS; do
    name=test-$(basename $disk)
    mkdir -p /tmp/$name
    mount $disk /tmp/$name
    [ $? -eq 0 ] || continue # Skip to the next partition if the mount fails

    # Copy current RHN host keys out to be reused
    if [ -f /tmp/${name}$SYSTEM_ID ]; then
        cp -a /tmp/${name}$SYSTEM_ID /tmp/rhn
        rhn_keys_found="yes"
        umount /tmp/$name
        break
    fi
    umount /tmp/$name
    rm -r /tmp/$name
done

# Try LVM if that didn't work
if [ "$rhn_keys_found" = "no" ]; then
    lvm lvmdiskscan
    vgs=$(lvm vgs | tail -n +2 | awk '{ print $1 }')
    for vg in $vgs; do
        # Activate any VG we found
        lvm vgchange -ay $vg
    done
    
    lvs=$(lvm lvs | tail -n +2 | awk '{ print "/dev/" $2 "/" $1 }')
    for lv in $lvs; do
        tmpdir=$(mktemp -d findkeys.XXXXXX)
        mkdir -p /tmp/${tmpdir}
        mount $lv /tmp/${tmpdir} || continue # Skip to next volume if this fails

        # Let's see if the keys are in there
        if [ -f /tmp/${tmpdir}$SYSTEM_ID ]; then
            cp -a /tmp/${tmpdir}$SYSTEM_ID /tmp/rhn/
            rhn_keys_found="yes"
            umount /tmp/${tmpdir}
            break # We're done!
        fi
        umount /tmp/${tmpdir}
        rm -r /tmp/${tmpdir}
    done
    
    # And clean up..
    for vg in $vgs; do
        lvm vgchange -an $vg
    done
fi




%pre
(
# Load DHCP parameters to get hostname
NETINFO=/tmp/netinfo
NETCONFIG=/etc/sysconfig/network
# Fallback added for RHEL 6
for DEV in `grep ": activating device " /tmp/anaconda.log 2>/dev/null | sed "s/.* //"`
do
	IFCFG=/etc/sysconfig/network-scripts/ifcfg-$DEV
	[ -f $IFCFG ] && . $IFCFG
done

if [ -f $NETINFO ]
then
	echo "Loading network information from $NETINFO"
	. $NETINFO
else
	echo File $NETINFO not found.
fi
if [ -f $NETCONFIG ]
then
	echo "Loading network information from $NETCONFIG"
	. $NETCONFIG
else
	echo File $NETCONFIG not found.
fi
echo "DEVICE=$DEVICE"
#endraw

TESTBED=N
DEFAULTDOMAIN=harsco.com

# Use this table to override hostname mapping
HOSTMAP=/tmp/HOSTMAP.txt
NETCFG=/etc/sysconfig/network

cat - >$HOSTMAP <<-EOF
# GOPS NAS service
00:10:18:92:57:CC hscuschlux00070.harsco.com
# One Source Tax Servers
A0:36:9F:20:2F:BC hscuschlux00174.harsco.com
A0:36:9F:20:2B:C0 hscuschlux00175.harsco.com
# Fusion MiddleWare Apps Servers
A0:36:9F:1E:05:14 hscuschlux00160.harsco.com
A0:36:9F:1E:03:3C hscuschlux00161.harsco.com
A0:36:9F:1E:03:80 hscuschlux00162.harsco.com
A0:36:9F:1E:03:C4 hscuschlux00163.harsco.com
# HIO DMZ servers - note, GB2 is used for build
90:B1:1C:40:7B:01 hscuschlux00156.harsco.com
90:B1:1C:40:8B:0A hscuschlux00155.harsco.com
D4:AE:52:AB:45:82 hscuschlux00220.harsco.com
D4:AE:52:AB:45:83 hscuschlux00220.harsco.com
DA:AE:52:B6:62:A4 hscuschlux00221.harsco.com
DA:AE:52:B6:62:A5 hscuschlux00221.harsco.com
D4:AE:52:B6:4C:8B hscuschlux00222.harsco.com
D4:AE:52:B6:4C:8C hscuschlux00222.harsco.com
D4:AE:52:B6:53:D6 hscuschlux00223.harsco.com
D4:AE:52:B6:53:D7 hscuschlux00223.harsco.com

# HIO DR servers
00:13:72:37:A9:11 hscuscooux00079.harsco.com
00:13:72:37:A9:1B hscuscooux00080.harsco.com
00:13:72:37:2F:1F hscuscooux00081.harsco.com
00:13:72:39:BD:87 hscuscooux00082.harsco.com
00:13:72:37:CF:01 hscuscooux00083.harsco.com
00:13:72:37:A5:E0 hscuscooux00084.harsco.com
00:13:72:36:42:90 hscuscooux00085.harsco.com
00:13:72:39:BD:55 hscuscooux00086.harsco.com
00:13:72:39:B9:D0 hscuscooux00087.harsco.com
00:13:72:37:A6:08 hscuscooux00088.harsco.com
00:13:72:37:A2:FC hscuscooux00089.harsco.com
00:13:72:38:60:84 hscuscooux00090.harsco.com
00:13:72:39:BA:1B hscuscooux00091.harsco.com
00:13:72:XXXXXXXX hscuscooux00092.harsco.com
# HIO M520 Blades Borrowed From MET SSO TAX 1 Aug 2013
A0:36:9F:20:2E:28 hscuschlux00176.harsco.com
A0:36:9F:20:2F:81 hscuschlux00177.harsco.com
A0:36:9F:20:35:A0 hscuschlux00178.harsco.com
# HIO M610 Blades for QUAL Environment Build 6 Aug 2013
00:10:18:92:45:40 hscuschlux00184.harsco.com
00:10:18:92:45:80 hscuschlux00185.harsco.com
00:10:18:92:45:7C hscuschlux00186.harsco.com
# HIO Cluster F
00:1E:4F:24:CE:57 hscuschlux00200.harsco.com
00:1E:4F:24:D0:5F hscuschlux00201.harsco.com
00:13:72:5E:46:02 hscuschlux00202.harsco.com
00:13:72:5E:9E:97 hscuschlux00203.harsco.com
# HIO Cluster G
00:13:72:60:41:5F hscuschlux00196.harsco.com
00:13:72:60:41:61 hscuschlux00196.harsco.com
00:13:72:60:68:C9 hscuschlux00197.harsco.com
00:13:72:60:68:CB hscuschlux00197.harsco.com
00:13:72:60:68:C4 hscuschlux00198.harsco.com
00:13:72:60:68:C6 hscuschlux00198.harsco.com
00:13:72:60:68:D3 hscuschlux00199.harsco.com
00:13:72:60:68:D5 hscuschlux00199.harsco.com
# HIO Cluster H
00:1E:C9:46:94:2B hscuschlux00190.harsco.com
00:1E:C9:46:94:2D hscuschlux00190.harsco.com
00:1E:C9:44:8C:72 hscuschlux00191.harsco.com
00:1E:C9:44:8C:74 hscuschlux00191.harsco.com
00:1E:C9:44:C7:CF hscuschlux00192.harsco.com
00:1E:C9:44:C7:D1 hscuschlux00192.harsco.com
00:1E:C9:4E:EB:5A hscuschlux00193.harsco.com
00:1E:C9:4E:EB:5C hscuschlux00193.harsco.com
00:1E:C9:4E:ED:AE hscuschlux00194.harsco.com
00:1E:C9:4E:ED:B0 hscuschlux00194.harsco.com
00:1E:C9:4E:EB:78 hscuschlux00195.harsco.com
00:1E:C9:4E:EB:7A hscuschlux00195.harsco.com
#
# BI DEV SERVER
D4:BE:D9:F5:C2:2F hscuschlux00154.harsco.com
#
# HIO Cluster I
00:1E:4F:24:D0:43 hscuschlux00204.harsco.com
00:1E:4F:24:CF:DA hscuschlux00205.harsco.com
00:1E:4F:24:D0:64 hscuschlux00206.harsco.com
00:1E:4F:24:CE:5C hscuschlux00207.harsco.com
#
# OHO MDM dev server
00:10:18:92:57:C8 hscuschlux00157.harsco.com
00:10:18:92:57:CA hscuschlux00157.harsco.com
# OHO DR servers
00:10:18:92:4A:18 hscgblhdux00223.harsco.com
#
XX:XX:XX:XX:XX:XX SOMESERVER.harsco.com
EOF

# Get the boot device IP address
BOOTMAC=$(ifconfig $DEVICE | grep HWaddr | sed 's/   */ /g' | cut -d\  -f 5)
echo BOOTMAC is $BOOTMAC
NEWHOST=$(grep -i "^$BOOTMAC " $HOSTMAP|sed s'/.* //')

# If there is no override, and the hostname is invalid then prompt for a new host name.

if [ "$NEWHOST" = "" ]; then
	case "$HOSTNAME" in
	hscuschlux00183*)
		echo "Faking for testbed environment"
		TESTBED=Y
		BOOTMAC="11:22:33:44:55:66"
		NEWHOST=prompt
	;;
	localhost*|"")
		NEWHOST=prompt
	;;
	esac
fi


if [ "$NEWHOST" = prompt ]; then
	#
	if [ $TESTBED = Y ]; then
		echo "<<< Console redirect here >>>"
	else
		# Switch to virtual tty 7
		exec < /dev/tty7 > /dev/tty7 2> /dev/tty7
		chvt 7
	fi
	echo "*****************************************************"
	echo "**                                                 **"
	echo "** This hardware is not associated with a hostname **"
	echo "**            the build cannot continue            **"
	echo "**                                                 **"
	echo "*****************************************************"
	echo You may do one of the following:
	echo " 1. Enter a hostname manually now"
	echo " 2. Update the Satellite server HOSTMAP snippet"
	echo "    for MAC $BOOTMAC and restart the build"
	echo " 3. Enter '!' at the prompt to access a command line"
	while [ "$NEWHOST" = prompt ]
	do
		echo ""
		read -p "Enter a host name or '!' for command line: " PR1 JUNK
		case $PR1 in
		"")
		;;
		!)
		echo ""
		echo "Exit shell to continue"
		/bin/bash -i
		;;
		*)
			read -p "Re-enter hostname to confirm: " PR2 JUNK
			if [ "$PR1" = "$PR2" ]; then
				case $PR1 in
				*.*)	:
				;;
				*)
				PR1=$PR1.$DEFAULTDOMAIN
				;;
				esac
				NEWHOST="$PR1"
				echo "Ok, hostname will be $NEWHOST"
			else
				echo " *** Entries do not match ***"
			fi
		;;
		esac
	done
	if [ $TESTBED = Y ]; then
		echo "<<< Return to main console here >>>"
	else
		chvt 1
	fi
fi

# Push the network parameters to the include file.
if [ "$NEWHOST" = "" ]
then
	echo "Retaining original host name $HOSTNAME"
	echo "network --device $DEVICE --bootproto dhcp" >/tmp/hsc_network_include
else
	echo "Hostname is over-ridden with $NEWHOST"
	HOSTNAME=$NEWHOST
	echo "network --device $DEVICE --bootproto dhcp --hostname=$HOSTNAME" >/tmp/hsc_network_include
fi
#noraw



# Calculate swap size, use hostname lookup if
# calculated size falls below minimum
# This is normally only a problem during 32-bit kixstarts
SWAPMIN=8
SWAPPERCENT=75
SWAPPERCENT=100


SWAPNEEDED=$(awk '$1=="MemTotal:" {print $2}' /proc/meminfo)
if [ "$SWAPNEEDED" = "" ]; then
        SWAPNEEDED=0
fi
SWAPNEEDED=$(( ( ($SWAPNEEDED / 1000 / 1024 ) ) * $SWAPPERCENT / 100 ))


echo "Calculated swap from memory as $SWAPNEEDED GB"

if [ "$SWAPNEEDED" -lt "$SWAPMIN" ]; then
        echo "Swap too low, using hostname lookup"
        case "$HOSTNAME" in
                hscuschlux00182*)       SWAPNEEDED=24 ;;
                asguschlux0003[6-9]*)	SWAPNEEDED=16 ;;
                asguschlux0004[0-6]*)	SWAPNEEDED=16 ;;
                hscuschlux0019[6-9]*)	SWAPNEEDED=16 ;;
                hscuschlux0020[2-3]*)	SWAPNEEDED=16 ;;
                hscuschlux0020[6-7]*)	SWAPNEEDED=16 ;;
                hscuscoo*)		SWAPNEEDED=16 ;;
                *)      SWAPNEEDED=$SWAPMIN ;;
        esac
        echo "Correcting swap minimum to $SWAPNEEDED"
fi

SWAPNEEDED=$(($SWAPNEEDED*1024))
echo Swap size in KB=$SWAPNEEDED
echo "part /boot --size=200 --fstype=ext3" > /tmp/partition-config
echo "part swap --size=$SWAPNEEDED" >> /tmp/partition-config
echo "part pv.01 --size=20480 --grow" >> /tmp/partition-config
echo "volgroup myvg pv.01" >> /tmp/partition-config
# Modify size of root - 40GB standard, but allow for small local disk
case "$PARTITION_SCHEME" in
"146GB")
echo "logvol / --vgname=myvg --name=rootvol --size=24576" >> /tmp/partition-config
;;
*)
echo "logvol / --vgname=myvg --name=rootvol --size=40960" >> /tmp/partition-config
;;
esac
# Use the remaining disk for a local data store
echo "logvol /u01 --vgname=myvg --name=datavol --size=20480 --grow" >> /tmp/partition-config
#endraw
# $ SNIPPET ('spacewalk/1/PAUSE')
) >> /tmp/ks-pre.log.1 2>&1

%post --nochroot
mkdir /mnt/sysimage/tmp/ks-tree-copy
if [ -d /oldtmp/ks-tree-shadow ]; then
cp -fa /oldtmp/ks-tree-shadow/* /mnt/sysimage/tmp/ks-tree-copy
elif [ -d /tmp/ks-tree-shadow ]; then
cp -fa /tmp/ks-tree-shadow/* /mnt/sysimage/tmp/ks-tree-copy
fi
cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
cp -f /tmp/ks-pre.log* /mnt/sysimage/root/

cp `awk '{ if ($1 ~ /%include/) {print $2}}' /tmp/ks.cfg` /tmp/ks.cfg /mnt/sysimage/root

%post --interpreter /usr/bin/python --nochroot
import xmlrpclib
import os.path
system_id = "/tmp/rhn/systemid"
try:
    if os.path.exists(system_id):
        client =  xmlrpclib.Server("http://hscuschlux00183.harsco.com/rpc/api")
        client.system.delete_system(open(system_id).read())
except:
    # xml rpc due to  a old/bad system id
    # we don't care about those
    # we'll register those as new. 
    pass



%post
(
# --Begin RHN Satellite command section--
cat > /tmp/gpg-key-1 <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.2.6 (GNU/Linux)

mQGiBEXopTIRBACZDBMOoFOakAjaxw1LXjeSvh/kmE35fU1rXfM7T0AV31NATCLF
l5CQiNDA4oWreDThg2Bf6+LIVTsGQb1V+XXuLak4Em5yTYwMTVB//4/nMxQEbpl/
QB2XwlJ7EQ0vW+kiPDz/7pHJz1p1jADzd9sQQicMtzysS4qT2i5A23j0VwCg1PB/
lpYqo0ZhWTrevxKMa1n34FcD/REavj0hSLQFTaKNLHRotRTF8V0BajjSaTkUT4uk
/RTaZ8Kr1mTosVtosqmdIAA2XHxi8ZLiVPPSezJjfElsSqOAxEKPL0djfpp2wrTm
l/1iVnX+PZH5DRKCbjdCMLDJhYap7YUhcPsMGSeUKrwmBCBJUPc6DhjFvyhA9IMl
1T0+A/9SKTv94ToP/JYoCTHTgnG5MoVNafisfe0wojP2mWU4gRk8X4dNGKMj6lic
vM6gne3hESyjcqZSmr7yELPPGhI9MNauJ6Ob8cTR2T12Fmv9w03DD3MnBstR6vhP
QcqZKhc5SJYYY7oVfxlSOfF4xfwcHQKoD5TOKwIAQ6T8jyFpKbQkRmVkb3JhIEVQ
RUwgPGVwZWxAZmVkb3JhcHJvamVjdC5vcmc+iGQEExECACQFAkXopTICGwMFCRLM
AwAGCwkIBwMCAxUCAwMWAgECHgECF4AACgkQEZzANiF1IfabmQCgzvE60MnHSOBa
ZXXF7uU2Vzu8EOkAoKg9h+j0NuNom6WUYZyJQt4zc5seuQINBEXopTYQCADapnR/
blrJ8FhlgNPl0X9S3JE/kygPbNXIqne4XBVYisVp0uzNCRUxNZq30MpY027JCs2J
nL2fMpwvx33f0phU029vrIZKA3CmnnwVsjcWfMJOVPBmVN7m5bGU68F+PdRIcDsl
PMOWRLkTBZOGolLgIbM4719fqA8etewILrX6uPvRDwywV7/sPCFpRcfNNBUY+Zx3
5bf4fnkaCKxgXgQS3AT+hGYhlzIqQVTkGNveHTnt4SSzgAqR9sSwQwqvEfVtYNeS
w5rDguLG41HQm1Hojv59HNYjH6F/S1rClZi21bLgZbKpCFX76qPt8CTw+iQLBPPd
yoOGHfzyp7nsfhUrAAMFB/9/H9Gpk822ZpBexQW4y3LGFo9ZSnmu+ueOZPU3SqDA
DW1ovZdYzGuJTGGM9oMl6bL8eZrcUBBOFaWge5wZczIE3hx2exEOkDdvq+MUDVD1
axmN45q/7h1NYRp5GQL2ZsoV4g9U2gMdzHOFtZCER6PP9ErVlfJpgBUCdSL93V4H
Sgpkk7znmTOklbCM6l/G/A6q4sCRqfzHwVSTiruyTBiU9lfROsAl8fjIq2OzWJ2T
P9sadBe1llUYaow7txYSUxssW+89avct35gIyrBbof5M+CBXyAOUaSWmpM2eub24
0qbqiSr/Y6Om0t6vSzR8gRk7g+1H6IE0Tt1IJCvCAMimiE8EGBECAA8FAkXopTYC
GwwFCRLMAwAACgkQEZzANiF1IfZQYgCgiZHCv4xb+sTHCn/otc1Ovvi/OgMAnRXY
bbsLFWOfmzAnNIGvFRWy+YHi
=MMNL
-----END PGP PUBLIC KEY BLOCK-----

EOF
# gpg-key1
rpm --import /tmp/gpg-key-1
cat > /tmp/gpg-key-2 <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.2.6 (GNU/Linux)

mQGiBEXbB7MRBACvzKs1F05fAPe4Sacp34VJuHQeycvzUW7aYSYZ3ZrhDkLBf88a
2GO919kJP8m0U/EGpvkR2nPd4vM5N8VJp1gTdweL2MqsZz4/NJ9C/ttpGPYlljso
7/pQ+df1ihjXTQukOVaaz7bM2wbl+beusY9R+IgF006KZ741MmjJTVPCLwCg+17f
RZbrw/Irqp71GGrxYaCE5gMD/1czJJo26pwcO749n0OBdbFvXTGetQvhgZt5jIZM
i67iqiYfOBqwQjB+NdklfTmT8VGVvUmK5k3VXpsl7aM/gGzilh9JBMUA1qNvmG6k
acJ2oEguh11mhPeOKqRWmzw2QwLKUNaO+AcD+MWp2BsrW4+BcoIH11e3yWdv0Cs1
mkY3BACD2AQ3dPR4weFP3utRLoJ0tR+acTv2lOh/4pBmHXJrjlTS8RF7BAyKtygm
1ZwZ22j9vQk0ffi48ENAcNfDTN87xeVo4donGft1x7kQnAQb4O2M6dG5ivP7wHgv
/sFpk5Uxz9/errVdghA2OP3kKoqXK//Xxm2voi6XnjG7xdmxObQqSGFyc2NvIEdJ
UyAoUlBNIFBhY2thZ2VyKSA8Z2lzQGhhcnNjby5jb20+iF4EExECAB4FAkXbB7MC
GwMGCwkIBwMCAxUCAwMWAgECHgECF4AACgkQASTG9a+oC4NDEACg+o6K3EsQ+061
Ql8SPlLl0lPIW1oAn1tmhfXio+kY2MaGzvYfleEV8cHbuQENBEXbB7QQBADuuqDR
4Ux3oEb74leIiH/mVP/k1KNSx36S8oYRS5RO/CfZs/GO93n+HWwoNoyqc7AfHqyc
QdysXPy4IqUdB/OLEyZuBGSZMwAGp+L4APfmcy7iYAKWYE0ypfdlICUveyf5PWM1
H2JXujSxsra7dVFuVtZt77L1Ee83T1xU4Wa8/wADBQP9Gxjk7/SfNUENzjScUOA3
EkxX4J9R8P5ot5wO53pN3sWhVpR9TcYS9722Y/KmhSj5ZgR1gHqaJiIN9SmnfH8P
awscLezlhHMspsDxffHYIj9VXVA3baIjSgKHjgLbolyK0PUGSmwgX1OVRP4yMEqC
YxYyBmNG9cgB1yoDECl0usCISQQYEQIACQUCRdsHtAIbDAAKCRABJMb1r6gLg/7T
AJ9Fknv8iFK6W0iCxuKyc2Ft36b+uACcDW7GX3OC/EGJmxoKdSoqRxC9PBI=
=2wUu
-----END PGP PUBLIC KEY BLOCK-----

EOF
# gpg-key2
rpm --import /tmp/gpg-key-2
cat > /tmp/ssl-key-1 <<'EOF'
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            a3:99:fb:b0:d8:c8:e6:35
        Signature Algorithm: sha1WithRSAEncryption
        Issuer: C=GB, ST=Surrey, L=Leatherhead, O=Harsco, OU=hscuschlux00183.harsco.com, CN=hscuschlux00183.harsco.com/emailAddress=gis@harsco.com
        Validity
            Not Before: Jan 20 15:56:14 2012 GMT
            Not After : Jan 14 15:56:14 2036 GMT
        Subject: C=GB, ST=Surrey, L=Leatherhead, O=Harsco, OU=hscuschlux00183.harsco.com, CN=hscuschlux00183.harsco.com/emailAddress=gis@harsco.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
            RSA Public Key: (2048 bit)
                Modulus (2048 bit):
                    00:a4:14:f9:e9:e2:83:61:35:16:e1:1c:1e:1b:07:
                    69:01:a6:47:a3:51:3c:3f:8a:7f:8f:77:c4:ac:20:
                    9a:72:36:ba:ed:37:b5:ba:e5:7a:c6:95:6d:ac:28:
                    5e:c0:76:cc:19:b6:15:c3:de:14:9b:74:97:31:ef:
                    d7:9f:c7:da:d8:b6:39:22:9d:4c:8c:a5:0d:f7:80:
                    14:a8:cb:b0:44:1c:1e:cb:27:05:7e:0e:77:4a:68:
                    5e:59:75:7d:66:e2:9d:8d:a9:26:86:3d:12:b6:b7:
                    98:46:de:4a:22:f1:12:ff:53:64:fd:33:4f:98:a3:
                    9c:64:ae:5c:02:62:81:98:30:ab:15:e3:22:6e:13:
                    62:76:5f:c0:b8:3b:74:63:f2:49:b2:b3:f5:3c:f6:
                    dc:25:71:b9:6f:cb:79:e6:f4:7d:bf:18:b1:79:b9:
                    d7:9f:b5:38:2b:c9:12:09:d0:88:62:fc:a0:2f:17:
                    18:0d:86:ed:c7:9c:11:a8:3f:f8:53:33:ac:93:05:
                    02:ae:6b:94:8c:96:9e:18:b9:59:68:75:46:4a:06:
                    9b:0e:04:ce:fb:83:a7:4d:77:88:2d:cb:5f:02:34:
                    c9:ce:9f:06:29:6d:46:f4:f1:75:0d:97:17:74:a0:
                    ab:d7:08:35:7d:13:e9:fe:a3:9d:cd:99:7c:d2:c3:
                    39:f9
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:TRUE
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment, Certificate Sign
            X509v3 Extended Key Usage: 
                TLS Web Server Authentication, TLS Web Client Authentication
            Netscape Comment: 
                RHN SSL Tool Generated Certificate
            X509v3 Subject Key Identifier: 
                F4:73:3F:49:80:97:50:0B:F3:9D:CF:E2:60:C7:7F:C0:FE:62:BB:CC
            X509v3 Authority Key Identifier: 
                keyid:F4:73:3F:49:80:97:50:0B:F3:9D:CF:E2:60:C7:7F:C0:FE:62:BB:CC
                DirName:/C=GB/ST=Surrey/L=Leatherhead/O=Harsco/OU=hscuschlux00183.harsco.com/CN=hscuschlux00183.harsco.com/emailAddress=gis@harsco.com
                serial:A3:99:FB:B0:D8:C8:E6:35

    Signature Algorithm: sha1WithRSAEncryption
        79:1b:fb:02:e4:a2:60:f4:1f:de:86:15:c5:59:ab:bf:14:26:
        94:20:8d:25:6b:83:e4:32:f5:fb:ce:85:02:d1:42:12:34:27:
        ed:d2:ec:e8:8a:72:58:5c:b7:d4:ca:ee:5d:ee:99:fb:64:01:
        3d:1e:27:c1:08:89:a8:c5:a0:08:8b:4f:a0:be:88:44:5a:3f:
        60:e8:f9:be:29:cd:b1:a8:13:37:5a:06:8f:93:92:4b:2c:9e:
        a5:b4:a0:0f:57:f1:ab:1d:28:7d:17:97:a6:db:8d:d1:2b:25:
        fa:9e:25:90:24:e7:7e:75:0c:3c:7a:96:ad:ce:16:3b:61:49:
        ac:a2:52:14:eb:5e:73:d5:23:e5:b7:e8:72:74:ec:d5:80:f3:
        17:eb:82:da:89:30:f7:93:00:7e:21:51:ba:70:cd:0c:e6:ff:
        b5:73:29:de:6e:5e:20:7d:f4:d6:f9:2e:e7:a3:f7:ed:35:db:
        4c:9c:c0:2b:ca:26:8b:c5:19:2a:aa:73:26:e4:b4:44:f6:33:
        0a:19:5c:a9:7a:ac:ce:e7:f9:5a:b6:4c:b0:45:44:dc:76:3f:
        11:39:91:b5:4c:98:89:de:99:8b:f5:2f:0e:c6:94:a2:6a:64:
        fe:ee:54:b9:7f:c7:d7:55:f6:6a:0b:93:73:ad:e4:6c:5c:7e:
        06:b7:57:3c
-----BEGIN CERTIFICATE-----
MIIFWTCCBEGgAwIBAgIJAKOZ+7DYyOY1MA0GCSqGSIb3DQEBBQUAMIGuMQswCQYD
VQQGEwJHQjEPMA0GA1UECBMGU3VycmV5MRQwEgYDVQQHEwtMZWF0aGVyaGVhZDEP
MA0GA1UEChMGSGFyc2NvMSMwIQYDVQQLExpoc2N1c2NobHV4MDAxODMuaGFyc2Nv
LmNvbTEjMCEGA1UEAxMaaHNjdXNjaGx1eDAwMTgzLmhhcnNjby5jb20xHTAbBgkq
hkiG9w0BCQEWDmdpc0BoYXJzY28uY29tMB4XDTEyMDEyMDE1NTYxNFoXDTM2MDEx
NDE1NTYxNFowga4xCzAJBgNVBAYTAkdCMQ8wDQYDVQQIEwZTdXJyZXkxFDASBgNV
BAcTC0xlYXRoZXJoZWFkMQ8wDQYDVQQKEwZIYXJzY28xIzAhBgNVBAsTGmhzY3Vz
Y2hsdXgwMDE4My5oYXJzY28uY29tMSMwIQYDVQQDExpoc2N1c2NobHV4MDAxODMu
aGFyc2NvLmNvbTEdMBsGCSqGSIb3DQEJARYOZ2lzQGhhcnNjby5jb20wggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCkFPnp4oNhNRbhHB4bB2kBpkejUTw/
in+Pd8SsIJpyNrrtN7W65XrGlW2sKF7AdswZthXD3hSbdJcx79efx9rYtjkinUyM
pQ33gBSoy7BEHB7LJwV+DndKaF5ZdX1m4p2NqSaGPRK2t5hG3koi8RL/U2T9M0+Y
o5xkrlwCYoGYMKsV4yJuE2J2X8C4O3Rj8kmys/U89twlcblvy3nm9H2/GLF5udef
tTgryRIJ0Ihi/KAvFxgNhu3HnBGoP/hTM6yTBQKua5SMlp4YuVlodUZKBpsOBM77
g6dNd4gty18CNMnOnwYpbUb08XUNlxd0oKvXCDV9E+n+o53NmXzSwzn5AgMBAAGj
ggF2MIIBcjAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwICpDAdBgNVHSUEFjAUBggr
BgEFBQcDAQYIKwYBBQUHAwIwMQYJYIZIAYb4QgENBCQWIlJITiBTU0wgVG9vbCBH
ZW5lcmF0ZWQgQ2VydGlmaWNhdGUwHQYDVR0OBBYEFPRzP0mAl1AL853P4mDHf8D+
YrvMMIHjBgNVHSMEgdswgdiAFPRzP0mAl1AL853P4mDHf8D+YrvMoYG0pIGxMIGu
MQswCQYDVQQGEwJHQjEPMA0GA1UECBMGU3VycmV5MRQwEgYDVQQHEwtMZWF0aGVy
aGVhZDEPMA0GA1UEChMGSGFyc2NvMSMwIQYDVQQLExpoc2N1c2NobHV4MDAxODMu
aGFyc2NvLmNvbTEjMCEGA1UEAxMaaHNjdXNjaGx1eDAwMTgzLmhhcnNjby5jb20x
HTAbBgkqhkiG9w0BCQEWDmdpc0BoYXJzY28uY29tggkAo5n7sNjI5jUwDQYJKoZI
hvcNAQEFBQADggEBAHkb+wLkomD0H96GFcVZq78UJpQgjSVrg+Qy9fvOhQLRQhI0
J+3S7OiKclhct9TK7l3umftkAT0eJ8EIiajFoAiLT6C+iERaP2Do+b4pzbGoEzda
Bo+TkkssnqW0oA9X8asdKH0Xl6bbjdErJfqeJZAk5351DDx6lq3OFjthSayiUhTr
XnPVI+W36HJ07NWA8xfrgtqJMPeTAH4hUbpwzQzm/7VzKd5uXiB99Nb5Luej9+01
20ycwCvKJovFGSqqcybktET2MwoZXKl6rM7n+Vq2TLBFRNx2PxE5kbVMmInemYv1
Lw7GlKJqZP7uVLl/x9dV9moLk3Ot5Gxcfga3Vzw=
-----END CERTIFICATE-----

EOF
# ssl-key1
cat /tmp/ssl-key-* > /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
perl -npe 's/RHNS-CA-CERT/RHN-ORG-TRUSTED-SSL-CERT/g' -i /etc/sysconfig/rhn/*

mkdir -p /tmp/rhn_rpms/optional
cd /tmp/rhn_rpms/optional 
wget -P /tmp/rhn_rpms/optional http://hscuschlux00183.harsco.com/download/package/82f42492311fa1ca735749b192f3f6e628c818fb/0/1/35549/pyOpenSSL-0.6-2.el5.x86_64.rpm http://hscuschlux00183.harsco.com/download/package/4fcbe33089887769c267c3a6cf5357be5202f1bb/0/1/73077/libxml2-python-2.6.26-2.1.21.el5_9.2.x86_64.rpm http://hscuschlux00183.harsco.com/download/package/461ea2649b1f6200893cdf481b87521be5d880c1/0/1/39254/rhnlib-2.5.22-7.el5.noarch.rpm 
rpm -Uvh --replacepkgs --replacefiles /tmp/rhn_rpms/optional/pyOpenSSL* /tmp/rhn_rpms/optional/rhnlib* /tmp/rhn_rpms/optional/libxml2-python* 
perl -npe 's|^(\s*(noSSLS\|s)erverURL\s*=\s*[^:]+://)[^/]*/|${1}hscuschlux00183.harsco.com/|' -i /etc/sysconfig/rhn/up2date
mkdir -p /etc/sysconfig/rhn/allowed-actions/script
touch /etc/sysconfig/rhn/allowed-actions/script/run

# now copy from the ks-tree we saved in the non-chroot checkout
cp -fav /tmp/ks-tree-copy/* /
rm -Rf /tmp/ks-tree-copy
# --End RHN Satellite command section--

/etc/init.d/messagebus restart
/etc/init.d/haldaemon restart
# begin cobbler snippet
# set default MOTD
echo "Kickstarted on $(date +'%Y-%m-%d')" >> /etc/motd

# begin Red Hat management server registration
mkdir -p /usr/share/rhn/
wget http://hscuschlux00183.harsco.com/pub/RHN-ORG-TRUSTED-SSL-CERT -O /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT   
perl -npe 's/RHNS-CA-CERT/RHN-ORG-TRUSTED-SSL-CERT/g' -i /etc/sysconfig/rhn/*  
if [ -f /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release ]; then
    rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
fi
key=""
if [ -f /tmp/key ]; then
    key=`cat /tmp/key`
fi

if [ $key ]; then 
    rhnreg_ks --serverUrl=https://hscuschlux00183.harsco.com/XMLRPC --sslCACert=/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --activationkey=$key,1-58906b831063c58fc03230a720a0f18c,1-hsc-rhel-x86_64-server-5-2013.03
else
     rhnreg_ks --serverUrl=https://hscuschlux00183.harsco.com/XMLRPC --sslCACert=/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --activationkey=1-58906b831063c58fc03230a720a0f18c,1-hsc-rhel-x86_64-server-5-2013.03
fi
# end Red Hat management server registration

# end cobbler snippet

rhn_check
) >> /root/ks-rhn-post.log 2>&1

# Start post_install_network_config generated code
# End post_install_network_config generated code



%post
(
# Load DHCP parameters to get hostname
NETINFO=/tmp/netinfo
NETCONFIG=/etc/sysconfig/network
# Fallback added for RHEL 6
for DEV in `grep ": activating device " /tmp/anaconda.log 2>/dev/null | sed "s/.* //"`
do
	IFCFG=/etc/sysconfig/network-scripts/ifcfg-$DEV
	[ -f $IFCFG ] && . $IFCFG
done

if [ -f $NETINFO ]
then
	echo "Loading network information from $NETINFO"
	. $NETINFO
else
	echo File $NETINFO not found.
fi
if [ -f $NETCONFIG ]
then
	echo "Loading network information from $NETCONFIG"
	. $NETCONFIG
else
	echo File $NETCONFIG not found.
fi
echo "DEVICE=$DEVICE"
#endraw
# Select preferred updater
if [ -x /usr/bin/yum ]; then
	HSC_INSTALL="yum -y install"
	HSC_UPDATE="yum -y update"
	HSC_UPDATEALL="yum -y update"
else
	HSC_INSTALL="up2date"
	HSC_UPDATE="up2date"
	HSC_UPDATEALL="up2date -u && up2date -p"
fi
# $ SNIPPET( 'spacewalk/1/HOSTMAP')
# $ SNIPPET( 'spacewalk/1/PAUSE')
# Kickstart POST Script
echo "removing kernel from package skip list"
perl -pi -e 's/pkgSkipList=kernel\*\;/pkgSkipList=\;/g' /etc/sysconfig/rhn/up2date

# Update up2date and fully update the box.
# up2date up2date
$HSC_UPDATEALL 
if [ "`uname -p`" = "x86_64" ]; then
	KERNTYPE=smp
else
	KERNTYPE=hugemem
fi
# up2date kernel-$KERNTYPE
# up2date kernel-$KERNTYPE-devel
LASTKERN=`ls -rt1 /boot/vmlinuz*$KERNTYPE* |tail -1|sed 's/.*vmlinuz-//'`
echo "Setting boot kernel to $LASTKERN"
grubby --set-default=/boot/vmlinuz-$LASTKERN
# Fixup boot timeout
perl -pi -e "s/^timeout=[0-9]*/timeout=30/g" /boot/grub/grub.conf
# ensure ntpdate correct
ntpd -q -g

chkconfig ntpd on

echo "Port 22" >> /etc/ssh/sshd_config
echo "Port 2222" >> /etc/ssh/sshd_config

) >> /root/ks-post.log.2 2>&1

%post


# Start koan environment setup
echo "export COBBLER_SERVER=hscuschlux00183.harsco.com" > /etc/profile.d/cobbler.sh
echo "setenv COBBLER_SERVER hscuschlux00183.harsco.com" > /etc/profile.d/cobbler.csh
# End koan environment setup



wget "http://hscuschlux00183.harsco.com/cblr/svc/op/ks/profile/hsc-oho-dev-fmw:1:HarscoCorporation" -O /root/cobbler.ks
wget "http://hscuschlux00183.harsco.com/cblr/svc/op/trig/mode/post/profile/hsc-oho-dev-fmw:1:HarscoCorporation" -O /dev/null
